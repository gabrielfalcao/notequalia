apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cognodes-io.fullname" . }}-web
spec:
  minReadySeconds: 5
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cognodes-io.name" . }}-web
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cognodes-io.name" . }}-web
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      affinity:
        # kubernetes.io/hostname=pool-callosum-37wgr
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - pool-callosum-37wgr

          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - pool-callosum-37wgr

      initContainers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: check-installation
        command: ['/venv/bin/cognodes-io', 'check']
        envFrom:
          - configMapRef:
              name: {{ include "cognodes-io.fullname" . }}-env

      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: check-db-connection
        command: ['/venv/bin/cognodes-io', 'check-db']
        envFrom:
          - configMapRef:
              name: {{ include "cognodes-io.fullname" . }}-env

      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: run-database-migrations
        command: ['/venv/bin/cognodes-io', 'migrate-db']
        envFrom:
          - configMapRef:
              name: {{ include "cognodes-io.fullname" . }}-env
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "cognodes-io.fullname" . }}-secrets
              key: postgresql-password

        env:
        - name: DOCKER_IMAGE
          value: {{ .Values.image.tag }}

      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: purge-sessions
        command: ['/venv/bin/cognodes-io', 'purge-sessions']
        envFrom:
          - configMapRef:
              name: {{ include "cognodes-io.fullname" . }}-env

      volumes:
        - name: cognodes-uploads-volume
          persistentVolumeClaim:
            claimName: pvc-cognodes-io

      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}-web-application-server
        command: ['/venv/bin/cognodes-io', 'web']
        livenessProbe:
          httpGet:
            path: /health
            port: api
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: api
          initialDelaySeconds: 1

        env:
          - name: UPLOAD_FOLDER
            value: /cognodes.io/file-uploads
          # - name: OAUTH2_CLIENT_SECRET
          #   valueFrom:
          #     secretKeyRef:
          #       name: {{ template "cognodes-io.fullname" . }}-secrets
          #       key: oauth2-client-secret

        envFrom:
          - configMapRef:
              name: {{ include "cognodes-io.fullname" . }}-env

        ports:
        - containerPort: 5000
          name: api

        volumeMounts:
          - name: cognodes-uploads-volume
            mountPath: /cognodes.io
