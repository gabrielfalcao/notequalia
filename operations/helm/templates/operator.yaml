---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: notequalia-authuser-operator-account
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: notequalia-authuser-operator-role-cluster
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [cognod.es]
    resources: [applicationauthusers]
    verbs: [list, watch, patch, get]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, get]

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [cognod.es]
    resources: [app]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [cognod.es]
    resources: [notequalia-authuser-operators]
    verbs: [list, watch, patch]

  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: notequalia-authuser-operator-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: notequalia-authuser-operator-role-cluster
subjects:
  - kind: ServiceAccount
    name: notequalia-authuser-operator-account
    namespace: "{{ .Values.cluster.namespace }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notequalia-operator
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      application: notequalia-operator
  template:
    metadata:
      labels:
        application: notequalia-operator
    spec:
      serviceAccountName: notequalia-authuser-operator-account
      containers:
      - name: notequalia-k8s-operator
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/venv/bin/notequalia-io', 'k8s']
        envFrom:
          - configMapRef:
              name: {{ include "notequalia-io.fullname" . }}-env
